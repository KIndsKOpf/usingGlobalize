{
  "name": "using-globalize-devextreme-localization-forked",
  "description": "DevExtreme components can be localized by means of Globalize. You need to link Globalize modules, CLDR scripts, and DevExtreme dictionaries for desired locales (see the <head> tag of index.html). Then, load CLDR data for the same locales (see index.js). Using Angular, Vue and React, get all the needed components as imported modules instead (see app.component.ts, App.vue and App.js correspondingly). Finally, set the current locale with the Globalize.locale method.\n",
  "dependencies": {
    "@devextreme/vdom": "1.2.2",
    "cldrjs": "0.4.4",
    "devexpress-diagram": "2.1.19",
    "devexpress-gantt": "2.1.42",
    "devextreme": "21.1.4",
    "devextreme-quill": "1.1.4",
    "devextreme-react": "21.1.4",
    "es6-object-assign": "1.1.0",
    "globalize": "1.4.0",
    "inferno": "7.4.8",
    "inferno-clone-vnode": "7.4.8",
    "inferno-compat": "7.4.8",
    "inferno-create-class": "7.4.8",
    "inferno-create-element": "7.4.8",
    "inferno-dom": "1.0.7",
    "inferno-extras": "7.4.8",
    "inferno-hydrate": "7.4.8",
    "jszip": "3.6.0",
    "luxon": "1.27.0",
    "prop-types": "15.7.2",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "rrule": "2.6.6",
    "systemjs-plugin-json": "0.3.0"
  },
  "version": "0.0.0",
  "devDependencies": {
    "react-scripts": "1.0.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject"
  }
}